include .env

setup: install-awslocal docker-compose-run create-table

install-awslocal:
	pip3 install awscli-local

docker-compose-run:
	docker-compose up -d

create-table:
	@echo "Checking if table exists..."
	aws --endpoint-url=$(AWS_DYNAMO_ENDPOINT_URL) dynamodb describe-table --table-name $(AWS_DYNAMO_USERS_TABLE) > /dev/null 2>&1 || { \
		echo "Table does not exist. Creating table..."; \
		aws --endpoint-url=$(AWS_DYNAMO_ENDPOINT_URL) dynamodb create-table \
		    --table-name $(AWS_DYNAMO_USERS_TABLE) \
        --attribute-definitions \
            AttributeName=PK,AttributeType=S \
            AttributeName=SK,AttributeType=S \
        --key-schema \
            AttributeName=PK,KeyType=HASH \
            AttributeName=SK,KeyType=RANGE \
		    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5; \
		echo "Table created."; \
	}

# VERSION PRO
create-user-pool:
	@echo "Creating User Pool..."
	aws cognito-idp create-user-pool --pool-name my_user_pool --endpoint-url $(AWS_COGNITO_ENDPOINT_LOCAL) > create-user-pool-output.json
	@echo "User Pool created."

create-user-pool-client: create-user-pool
	@echo "Creating User Pool Client..."
	USER_POOL_ID=$$(jq -r '.UserPool.Id' create-user-pool-output.json); \
	aws cognito-idp create-user-pool-client --user-pool-id $$USER_POOL_ID --client-name my_user_pool_client --endpoint-url $(AWS_COGNITO_ENDPOINT_LOCAL) > create-user-pool-client-output.json
	@echo "User Pool Client created."

export-env: create-user-pool-client
	@echo "Exporting environment variables..."
	USER_POOL_ID=$$(jq -r '.UserPool.Id' create-user-pool-output.json); \
	CLIENT_ID=$$(jq -r '.UserPoolClient.ClientId' create-user-pool-client-output.json); \
	echo "User Pool ID: $$USER_POOL_ID"; \
	echo "Client ID: $$CLIENT_ID"; \
	export AWS_COGNITO_USER_POOL_ID=$$USER_POOL_ID; \
	export AWS_COGNITO_CLIENT_ID=$$CLIENT_ID; \
	echo "Environment variables exported."
